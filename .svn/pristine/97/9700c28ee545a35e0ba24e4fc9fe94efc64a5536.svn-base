package common.service;

import java.text.ParseException;
import java.text.SimpleDateFormat;
import java.util.List;

import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.stereotype.Service;
import org.springframework.transaction.annotation.Transactional;

import common.persistent.CompanyMapper;
import common.persistent.RegisterApplyGSMapper;
import common.persistent.UserVOMapper;
import common.vo.Company;
import common.vo.RegisterApplyGS;
import common.vo.RegisterApplyGSExample;
import common.vo.RegisterApplyGSExample.Criteria;
import common.vo.RegisterApplyQueryVO_gs;
import common.vo.UserVO;
import mail.persistent.UserMailMapper;
import mail.service.MailService;
import mail.vo.UserMail;
import util.UUID_Util;

@Service
public class ApprovalRegisterService {

	@Autowired
	private RegisterApplyGSMapper registerApplyGSMapper;

	@Autowired
	private UserVOMapper userVOMapper;
	@Autowired
	private CompanyMapper companyMapper;
	@Autowired
	private UserMailMapper userMailMapper;
	@Autowired
	private MailService mailService;

	private static final SimpleDateFormat dateFormat = new SimpleDateFormat("yyyy-mm-dd");

	public List<RegisterApplyGS> getRegisterApplyList_gs(RegisterApplyQueryVO_gs vo) {
		String approvalState = vo.getApprovalState();
		String applyDate1 = vo.getApplyDate1();
		String applyDate2 = vo.getApplyDate2();
		String companyName = vo.getCompanyName();
		String companyName_jingque = vo.getCompanyName_jingque();
		RegisterApplyGSExample example = new RegisterApplyGSExample();
		example.clear();
		Criteria criteria = example.createCriteria();
		if (approvalState != null && !approvalState.equals("")) {
			criteria.andApplyStateEqualTo(Integer.valueOf(approvalState));
		}
		if (applyDate1 != null && !applyDate1.equals("")) {
			try {
				criteria.andApplyGsTimeGreaterThanOrEqualTo(dateFormat.parse(applyDate1));
			} catch (ParseException e) {
				System.out.println(e);
			}
		}
		if (applyDate2 != null && !applyDate2.equals("")) {
			try {
				criteria.andApplyGsTimeLessThanOrEqualTo(dateFormat.parse(applyDate2));
			} catch (ParseException e) {
				System.out.println(e);
			}
		}
		if (companyName != null && !companyName.equals("")) {
			if ("1".equals(companyName_jingque)) {
				criteria.andApplyGsNameEqualTo(companyName);
			} else {
				criteria.andApplyGsNameLike(companyName);
			}
		}
		return registerApplyGSMapper.selectByExample(example);
	}

	public RegisterApplyGS getApplyByID(String applyID) {
		return registerApplyGSMapper.selectByPrimaryKey(applyID);
	}

	@Transactional
	public void approvalApply_gs(String applyID, String applyState, String replyDetail) {
		RegisterApplyGS vo = registerApplyGSMapper.selectByPrimaryKey(applyID);
		RegisterApplyGS apply = registerApplyGSMapper.selectByPrimaryKey(applyID);
		if (applyState.equals("2")) {// 通过
			String userID = UUID_Util.getUUID();
			try {
				// 1.注册状态设为通过
				apply.setApplyState(2);
				apply.setReplyDetail(replyDetail);
				registerApplyGSMapper.updateByPrimaryKey(apply);
				// 2.插入用户
				
				UserVO user = new UserVO();
				user.setUserId(userID);
				user.setApplyId(applyID);
				user.setLoginName(apply.getApplyGsName());
				user.setLoginPassword(apply.getApplyGsUserIdnum().substring(apply.getApplyGsUserIdnum().length() - 6));
				user.setPhoneNum(apply.getApplyGsUserPhone());
				user.setUserType("1");
				user.setUserName(apply.getApplyGsUserName());
				user.setUserStatue("0");
				userVOMapper.insert(user);
				// 3.插入公司信息
				Company company = new Company();
				company.setGsId(userID);
				company.setGsName(apply.getApplyGsName());
				company.setGsDesc(apply.getApplyGsUserDesc());
				company.setGsState(1);
				companyMapper.insert(company);
				// 4.插入邮箱信息
				UserMail mail = new UserMail();
				mail.setUserId(userID);
				mail.setMailAddress(apply.getApplyGsUserEmail());
				mail.setMailName(apply.getApplyGsUserEmail());
				userMailMapper.insert(mail);
				// 5.发送邮件通知
				try {
					mailService.addToSendMail("1", userID, "设备供应与项目管理平台注册结果", "您好，您在本系统注册的公司【" + apply.getApplyGsName()
							+ "】已被审批通过啦！\n请及时登录系统修改个人信息！\n您的登录名为【" + apply.getApplyGsName() + "】密码为您注册时填写的身份证号码后六位！");
				} catch (Exception e) {
					// TODO Auto-generated catch block
					e.printStackTrace();
				}
			} catch (Exception e) {
				apply.setApplyState(0);
				apply.setReplyDetail(replyDetail);
				registerApplyGSMapper.updateByPrimaryKey(apply);
				userVOMapper.deleteByPrimaryKey(userID);
				companyMapper.deleteByPrimaryKey(userID);
			}
		} else {
			try {
				// 1.注册状态设为不通过
				vo.setApplyState(3);
				vo.setReplyDetail(replyDetail);
				registerApplyGSMapper.updateByPrimaryKey(vo);
				// 2.发送邮件通知
				try {
					mailService.addToSendMail_register_failure("1", apply.getApplyGsUserEmail(), "设备供应与项目管理平台注册结果",
							"您好，您在本系统注册的公司【" + apply.getApplyGsName() + "】审批未被通过！审批意见为【" + apply.getReplyDetail() + "】");
				} catch (Exception e) {
					// TODO Auto-generated catch block
					e.printStackTrace();
				}
			} catch (Exception e) {
				vo.setApplyState(1);
				vo.setReplyDetail(replyDetail);
				registerApplyGSMapper.updateByPrimaryKey(vo);
			}
			
			
		}
	}

}
